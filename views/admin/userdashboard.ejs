<%- include('../partials/adminheader') %>



<div class="flex min-h-screen">
  <!-- Sidebar -->
  <%- include('../partials/adminsidebar') %>

  <!-- Main Content -->
  <main class="md:ml-64 w-full min-h-screen bg-gray-50 transition-all duration-300 ease-in-out">
    <div class="pt-14 md:pt-0 p-4">
      <% if (locals.message && locals.alertType) { %>
        <div id="alertMessage" class="mb-4 p-3 rounded-md 
           <%= alertType === 'error' ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700' %>">
          <%= message %>
        </div>
      <% } %>

      <div class="bg-primary-white rounded-lg shadow-lg w-full overflow-hidden">
        <!-- Page Header -->
        <div class="flex flex-col md:flex-row justify-between items-center bg-gray-50 px-4 md:px-6 py-4 border-b space-y-4 md:space-y-0">
          <h1 class="text-xl md:text-2xl font-semibold text-gray-800">Customers Dashboard</h1>
          <div class="flex gap-4">
            <div class="relative">
              <input type="text" id="searchInput" placeholder="Search customers..."
                class="w-full md:w-64 border border-gray-300 rounded-md px-4 py-2 text-sm focus:ring-blue-500 focus:border-blue-500"
                oninput="filterCustomers()" />
              <i class="fas fa-search absolute top-3 right-4 text-gray-400"></i>
            </div>
            <button class="flex items-center bg-primary-accent text-white px-4 py-2 rounded-md shadow w-full md:w-auto justify-center"
              onclick="printPage()">
              <i class="fas fa-download mr-2"></i> Export
            </button>
          </div>
        </div>

        <!-- Customer Table -->
        <div class="overflow-x-auto mt-6">
          <table class="min-w-full bg-gray-50 text-sm">
            <thead>
              <tr class="text-left text-gray-600">
                <th class="px-6 py-3">#</th>
                <th class="px-6 py-3">Customer Name</th>
                <th class="px-6 py-3">Phone Number</th>
                <th class="px-6 py-3">Email</th>
                <th class="px-6 py-3">Status</th>
                <th class="px-6 py-3 text-center">Actions</th>
              </tr>
            </thead>
            <tbody id="customersTable" class="text-gray-700">
              <% if (customers.length === 0) { %>
                <tr>
                  <td colspan="6" class="text-center py-10">
                    <h2 class="text-xl font-semibold text-gray-600">No customers found</h2>
                  </td>
                </tr>
              <% } else { %>
                <% customers.forEach((customer, index) => { %>
                  <tr class="border-b hover:bg-gray-100">
                    <td class="px-6 py-3 font-medium"><%= index + 1 %></td>
                    <td class="px-6 py-3"><%= customer.fullname %></td>
                    <td class="px-6 py-3"><%= customer.phonenumber || 'Not Available' %></td>
                    <td class="px-6 py-3 truncate max-w-[200px]"><%= customer.email %></td>
                    <td class="px-6 py-3">
                      <span class="px-3 py-1 rounded-full text-sm font-medium
                        <%= customer.status === 'Active' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                        <%= customer.status %>
                      </span>
                    </td>
                    <td class="px-6 py-3 text-center">
                      <div class="flex justify-center gap-2">
                        <% if (customer.status === 'Active') { %>
                          <button type="button"
                            class="bg-primary-accent text-white px-4 py-2 rounded-md hover:bg-red-600"
                            id="toggle-<%= customer._id %>"
                            onclick="toggleCustomerStatus('<%= customer._id %>', 'block')">
                            Block
                          </button>
                        <% } else { %>
                          <button type="button"
                            class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600"
                            id="toggle-<%= customer._id %>"
                            onclick="toggleCustomerStatus('<%= customer._id %>', 'unblock')">
                            Unblock
                          </button>
                        <% } %>
                      </div>
                    </td>
                  </tr>
                <% }); %>
              <% } %>
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <div class="flex justify-center gap-2 p-4" id="pagination"></div>
      </div>
    </div>
  </main>
</div>

<script >

  window.toggleCustomerStatus = async function(customerId, action) {
    try {
      const confirmMessage = `Are you sure you want to ${action} this customer?`;
      const confirmed = await customConfirm(confirmMessage);
      
      if (!confirmed) return;

      const response = await axios.post(`/admin/customers/${action}/${customerId}`);

      if (response.data.success) {
        // Get references to elements
        const statusSpan = document.querySelector(`tr:has(#toggle-${customerId}) td:nth-child(5) span`);
        const toggleButton = document.getElementById(`toggle-${customerId}`);

        if (action === 'block') {
          // Update status text and color directly
          statusSpan.textContent = 'Inactive';
          statusSpan.className = 'px-3 py-1 rounded-full text-sm font-medium bg-red-100 text-red-800';
          
          // Update button directly
          toggleButton.textContent = 'Unblock';
          toggleButton.className = 'bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600';
          toggleButton.onclick = () => toggleCustomerStatus(customerId, 'unblock');
        } else {
          // Update status text and color directly
          statusSpan.textContent = 'Active';
          statusSpan.className = 'px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800';
          
          // Update button directly
          toggleButton.textContent = 'Block';
          toggleButton.className = 'bg-primary-accent text-white px-4 py-2 rounded-md hover:bg-red-600';
          toggleButton.onclick = () => toggleCustomerStatus(customerId, 'block');
        }

        showAlert(response.data.message, 'success');
      } else {
        showAlert('Operation failed. Please try again.', 'error');
      }
    } catch (error) {
      console.error('Error:', error);
      showAlert('Something went wrong. Please try again.', 'error');
    }
  };

  window.filterCustomers = function() {
    const input = document.getElementById('searchInput');
    const filter = input.value.toLowerCase();
    const tbody = document.querySelector('tbody');
    const rows = tbody.getElementsByTagName('tr');

    for (let row of rows) {
      const nameCell = row.cells[1];
      const phoneCell = row.cells[2];
      const emailCell = row.cells[3];
      
      if (nameCell && phoneCell && emailCell) {
        const name = nameCell.textContent || nameCell.innerText;
        const phone = phoneCell.textContent || phoneCell.innerText;
        const email = emailCell.textContent || emailCell.innerText;
        
        if (name.toLowerCase().includes(filter) || 
            phone.toLowerCase().includes(filter) || 
            email.toLowerCase().includes(filter)) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      }
    }
  };

  window.printPage = function() {
    window.print();
  };

  // Initialize pagination
  document.addEventListener('DOMContentLoaded', () => {
    const rowsPerPage = 10;
    const rows = document.querySelectorAll('#customersTable tr');
    const pageCount = Math.ceil(rows.length / rowsPerPage);
    const pagination = document.getElementById('pagination');

    for (let i = 1; i <= pageCount; i++) {
      const btn = document.createElement('button');
      btn.className = 'px-3 py-1 border rounded-md hover:bg-gray-100';
      btn.textContent = i;
      btn.onclick = () => showPage(i);
      pagination.appendChild(btn);
    }

    showPage(1);
  });

  function showPage(pageNum) {
    const rowsPerPage = 10;
    const rows = document.querySelectorAll('#customersTable tr');
    const start = (pageNum - 1) * rowsPerPage;
    const end = start + rowsPerPage;

    rows.forEach((row, index) => {
      row.style.display = (index >= start && index < end) ? '' : 'none';
    });

    // Update active page button
    document.querySelectorAll('#pagination button').forEach((btn, i) => {
      btn.classList.toggle('bg-primary-accent', btn.textContent == pageNum);
      btn.classList.toggle('text-white', btn.textContent == pageNum);
    });
  }
</script>

<%- include('../partials/adminfooter') %>