<%- include(locals.fullname ? '../partials/header' : '../partials/authheader' ) %>


    <main class="mx-auto my-5 md:my-10 container px-4 md:px-0">
        <!-- Breadcrumbs -->
        <nav class="flex mb-4 text-sm">
            <a href="<%= locals.fullname ? '/home' : '/' %>" class="text-gray-500 hover:text-red-600">Home</a>
            <span class="mx-2 text-gray-500">/</span>
            <span class="text-gray-800">All Products</span>
        </nav>

        <h1 class="text-xl md:text-2xl mb-4">All Products</h1>

        <% categoriesWithProducts.forEach(category=> { %>
            <% if (category.products.length> 0) { %>
                <section class="mb-6 md:mb-10">
                    <h2 class="text-xl md:text-2xl mb-3 md:mb-5">
                        <%= category.name %>
                    </h2>
                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 md:gap-5">
                        <% category.products.forEach(product=> { %>
                            <div class="bg-white rounded-lg text-center p-4 md:p-5 border border-gray-200">
                                <a href="/product/<%= product._id %>">
                                    <div class="aspect-square rounded-lg overflow-hidden mb-2">
                                        <img src="<%= product.images[0].path %>" alt="<%= product.name %>"
                                            class="w-full h-full object-contain" />
                                    </div>
                                    <p class="text-gray-800 text-sm md:text-base">
                                        <%= product.name %>
                                    </p>
                                    <% if (product.discount> 0) { %>
                                        <div class="flex items-center justify-center gap-2">
                                            <p class="text-red-600">₹<%= (product.price * (1 -
                                                    product.discount/100)).toFixed(2) %>
                                            </p>
                                            <p class="text-gray-400 line-through text-sm">₹<%= product.price.toFixed(2)
                                                    %>
                                            </p>
                                        </div>
                                        <% } else { %>
                                            <p class="text-red-600">₹<%= product.price.toFixed(2) %>
                                            </p>
                                            <% } %>
                                </a>

                                <!-- Buttons under price -->
                                <% if(locals.fullname){ %>
                                    <div class="flex justify-center gap-2 mt-3">

                                        <% if (product.stock> 0) { %>
                                            <button onclick="addToCart('<%= product._id %>')"
                                                class="p-2 rounded-full bg-gray-100 hover:bg-red-600 hover:text-white transition-colors duration-300">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none"
                                                    viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                        stroke-width="2"
                                                        d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                                                </svg>
                                            </button>
                                            <% } %>


                                                <% if(wishlistItems.some(id=> id.equals(product._id))) { %>
                                                    <button onclick="removeFromWishlist('<%= product._id %>')"
                                                        class="p-2 rounded-full bg-red-600 text-white hover:bg-gray-100 hover:text-black transition-colors duration-300">
                                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4"
                                                            fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                            <path stroke-linecap="round" stroke-linejoin="round"
                                                                stroke-width="2"
                                                                d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                                        </svg>

                                                    </button>
                                                    <% } else { %>
                                                        <button onclick="addToWishlist('<%= product._id %>')"
                                                            class="p-2 rounded-full  bg-gray-100 hover:bg-red-600 hover:text-white transition-colors duration-300">
                                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4"
                                                                fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                                <path stroke-linecap="round" stroke-linejoin="round"
                                                                    stroke-width="2"
                                                                    d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                                            </svg>
                                                        </button>
                                                        <% } %>
                                    </div>
                                    <% } %>

                                        <% if (product.stock <=0) { %>
                                            <p class="text-red-500 text-sm mt-1">Out of Stock</p>
                                            <% } %>
                            </div>
                            <% }); %>
                    </div>
                </section>
                <% } %>
                    <% }); %>
    </main>

    <script type="module">

        import { showAlert, closeCustomAlert } from '/js/util.js';

        async function addToCart(productId) {
            try {
                const { data } = await axios.post('/cart/add', { productId });

                // Use custom alert
                showAlert(data.message, data.success ? 'success' : 'error');
                document.getElementById("cart-quantity").innerText = data.totalQuantity

            } catch (error) {
                console.error('Error:', error);
                showAlert(error.response?.data?.message || 'Error adding item to cart', 'error');
            }
        }


        async function addToWishlist(productId) {
            try {
                const { data } = await axios.post('/wishlist/add', { productId });
                if (data.success) {
                    // Find all wishlist buttons for this product (in case it appears multiple times on page)
                    const wishlistButtons = document.querySelectorAll(`button[onclick="addToWishlist('${productId}')"]`);

                    wishlistButtons.forEach(button => {
                        // Create the new button with "remove" functionality
                        const newButton = document.createElement('button');
                        newButton.setAttribute('onclick', `removeFromWishlist('${productId}')`);
                        newButton.className = 'p-2 rounded-full bg-red-600 text-white hover:bg-gray-100 hover:text-black transition-colors duration-300';

                        // Set the SVG content
                        newButton.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                `;

                        // Replace the old button with the new one
                        button.parentNode.replaceChild(newButton, button);
                    });
                }
                showAlert(data.message, data.success ? 'success' : 'error');
            } catch (error) {
                console.error('Error:', error);
                showAlert(error.response?.data?.message || 'Error adding item to wishlist', 'error');
            }
        }

        async function removeFromWishlist(productId) {
            try {
                const response = await axios.post('/wishlist/remove', { productId });
                if (response.data.success) {
                    // Find all wishlist buttons for this product
                    const wishlistButtons = document.querySelectorAll(`button[onclick="removeFromWishlist('${productId}')"]`);

                    wishlistButtons.forEach(button => {
                        // Create the new button with "add" functionality
                        const newButton = document.createElement('button');
                        newButton.setAttribute('onclick', `addToWishlist('${productId}')`);
                        newButton.className = 'p-2 rounded-full bg-gray-100 hover:bg-red-600 hover:text-white transition-colors duration-300';

                        // Set the SVG content
                        newButton.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                `;
                        button.parentNode.replaceChild(newButton, button);
                    });
                    showAlert('Item removed from wishlist successfully', 'success');
                } else {
                    showAlert(response.data.message || 'Failed to remove item', 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('Error removing item from wishlist', 'error');
            }
        }

        window.removeFromWishlist = removeFromWishlist;
        window.addToWishlist = addToWishlist;
        window.addToCart = addToCart;
        window.closeCustomAlert = closeCustomAlert;



    </script>

    <%- include('../partials/footer') %>