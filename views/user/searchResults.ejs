<%- include(locals.fullname ? '../partials/header' : '../partials/authheader') %>

<main class="container mx-auto px-4 py-8 w-[70%] min-h-[calc(100vh-200px)]">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-semibold">Search Results for "<%= query %>"</h1>
        <div class="flex items-center">
            <label class="mr-2">Sort by:</label>
            <select id="sortSelect" class="border rounded-md px-3 py-1">
                <option value="featured">Featured</option>
                <option value="newest">New Arrivals</option>
                <option value="price_asc">Price: Low to High</option>
                <option value="price_desc">Price: High to Low</option>
                <option value="name_asc">Name: A-Z</option>
                <option value="name_desc">Name: Z-A</option>
                <option value="rating">Average Rating</option>
            </select>
        </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-6" id="productsGrid">
        <% products.forEach(product => { %>
            <div class="border rounded-lg p-4 hover:shadow-lg transition-shadow">
                <a href="/product/<%= product._id %>">
                    <div class="aspect-square rounded-lg overflow-hidden mb-4">
                        <img src="<%= product.images[0].path %>" 
                             alt="<%= product.name %>" 
                             class="w-full h-full object-contain"/>
                    </div>
                    <h2 class="text-lg font-semibold mb-2 truncate"><%= product.name %></h2>
                    
                    <div class="flex items-center gap-1 mb-2">
                        <% const rating = locals.productRatings[product._id] || 0 %>
                        <div class="flex items-center">
                            <% for(let i = 1; i <= 5; i++) { %>
                                <% if (i <= Math.floor(rating)) { %>
                                    <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                                    </svg>
                                <% } else if (i - rating < 1) { %>
                                    <div class="relative">
                                        <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                                        </svg>
                                        <div class="absolute top-0 left-0 overflow-hidden" style="width: '<%= (rating % 1) * 100 %> %'">
                                            <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                                            </svg>
                                        </div>
                                    </div>
                                <% } else { %>
                                    <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                                    </svg>
                                <% } %>
                            <% } %>
                        </div>
                        <span class="text-sm text-gray-600">(<%= rating %>)</span>
                    </div>
                    
                    <div class="flex items-center gap-2 mb-2">
                        <% if (product.discount > 0) { %>
                            <p class="text-red-600 font-semibold">
                                ₹<%= (product.price * (1 - product.discount/100)).toFixed(2) %>
                            </p>
                            <p class="text-gray-500 line-through text-sm">
                                ₹<%= product.price.toFixed(2) %>
                            </p>
                        <% } else { %>
                            <p class="text-red-600 font-semibold">₹<%= product.price.toFixed(2) %></p>
                        <% } %>
                    </div>
                </a>
                <div class="flex justify-center gap-2 mt-3">
                    <% if (product.stock > 0) { %>
                        <button onclick="addToCart('<%= product._id %>')" 
                                class="p-2 rounded-full bg-gray-100 hover:bg-red-600 hover:text-white transition-colors duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                            </svg>
                        </button>
                    <% } %>
                    <% if(wishlistItems.some(id=> id.equals(product._id))) { %>
                        <button onclick="removeFromWishlist('<%= product._id %>')" 
                                class="p-2 rounded-full bg-red-600 text-white hover:bg-gray-100 hover:text-black transition-colors duration-300">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                </svg>

                        </button>
                    <% } else { %>
                    <button onclick="addToWishlist('<%= product._id %>')" 
                            class="p-2 rounded-full  bg-gray-100 hover:bg-red-600 hover:text-white transition-colors duration-300">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                        </svg>
                    </button>
                    <% } %>
                </div>
                <% if (product.stock <= 0) { %>
                    <p class="text-red-500 text-sm mt-2">Out of Stock</p>
                <% } %>
            </div>
        <% }); %>
    </div>

    <% if (products.length === 0) { %>
        <div class="text-center py-8">
            <p class="text-gray-600">No products found matching your search.</p>
        </div>
    <% } %>
</main>

<script>
document.getElementById('sortSelect').addEventListener('change', async function() {
    const sortBy = this.value;
    const searchQuery = '<%= query %>';
    
    try {
        const response = await fetch(`/search?q=${searchQuery}&sort=${sortBy}`);
        const html = await response.text();
        
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        const newProductsGrid = doc.getElementById('productsGrid');
        document.getElementById('productsGrid').innerHTML = newProductsGrid.innerHTML;
    } catch (error) {
        console.error('Error sorting products:', error);
    }
});
</script>

<script >

async function addToCart(productId) {
    try {
        const { data } = await axios.post('/cart/add', { productId });
        showAlert(data.message, data.success ? 'success' : 'error');
        document.getElementById("cart-quantity").innerText = data.totalQuantity;
    } catch (error) {
        console.error('Error:', error);
        showAlert(error.response?.data?.message || 'Error adding item to cart', 'error');
    }
}


async function addToWishlist(productId) {
    try {
        const { data } = await axios.post('/wishlist/add', { productId });
        if (data.success) {
            // Find all wishlist buttons for this product (in case it appears multiple times on page)
            const wishlistButtons = document.querySelectorAll(`button[onclick="addToWishlist('${productId}')"]`);
            
            wishlistButtons.forEach(button => {
                // Create the new button with "remove" functionality
                const newButton = document.createElement('button');
                newButton.setAttribute('onclick', `removeFromWishlist('${productId}')`);
                newButton.className = 'p-2 rounded-full bg-red-600 text-white hover:bg-gray-100 hover:text-black transition-colors duration-300';
                
                // Set the SVG content
                newButton.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                `;
                
                // Replace the old button with the new one
                button.parentNode.replaceChild(newButton, button);
            });
        }
        showAlert(data.message, data.success ? 'success' : 'error');
    } catch (error) {
        console.error('Error:', error);
        showAlert(error.response?.data?.message || 'Error adding item to wishlist', 'error');
    }
}

async function removeFromWishlist(productId) {
    try {
        const response = await axios.post('/wishlist/remove', { productId });
        if (response.data.success) {
            // Find all wishlist buttons for this product
            const wishlistButtons = document.querySelectorAll(`button[onclick="removeFromWishlist('${productId}')"]`);
            
            wishlistButtons.forEach(button => {
                // Create the new button with "add" functionality
                const newButton = document.createElement('button');
                newButton.setAttribute('onclick', `addToWishlist('${productId}')`);
                newButton.className = 'p-2 rounded-full bg-gray-100 hover:bg-red-600 hover:text-white transition-colors duration-300';
                
                // Set the SVG content
                newButton.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                `;
                
                // Replace the old button with the new one
                button.parentNode.replaceChild(newButton, button);
            });
            showAlert('Item removed from wishlist successfully', 'success');
        } else {
            showAlert(response.data.message || 'Failed to remove item', 'error');
        }
    } catch (error) {
        console.error('Error:', error);
        showAlert('Error removing item from wishlist', 'error');
    }
}


</script>

<%- include('../partials/footer') %> 