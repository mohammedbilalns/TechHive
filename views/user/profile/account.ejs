<%- include('../../partials/header') %>


  <div class="flex flex-col md:flex-row">

    <%- include('../../partials/usersidebar') %>

    <main class="flex-grow p-4 md:py-12">
      <nav class="flex mb-6 text-sm">
        <a href="/home" class="text-gray-500 hover:text-primary-accent">Home</a>
        <span class="mx-2 text-gray-500">/</span>
    
        <span class="text-gray-800">Account Details</span>
    </nav>
      <% if (locals.message && locals.alertType) { %>
        <div id="alertMessage" class="mb-4 p-3 rounded-md 
           <%= alertType === 'error' ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700' %>">
          <%= message %>
        </div>
        <% } %>

          <div class="bg-white rounded-lg shadow-lg p-6">
            <div class="flex justify-between items-center mb-6">
              <h1 class="text-2xl font-semibold text-gray-800">Account Details</h1>
              <button onclick="toggleEdit()"
                class="bg-primary-accent text-white px-4 py-2 rounded-lg hover:bg-primary-accent/90">
                <i class="fas fa-edit mr-2"></i> Edit Details
              </button>
            </div>

            <!-- View Mode -->
            <div id="viewMode" class="space-y-6">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <p class="text-gray-600">Full Name</p>
                  <p class="text-lg font-semibold">
                    <%= user.fullname %>
                  </p>
                </div>
                <div>
                  <p class="text-gray-600">Email Address</p>
                  <p class="text-lg font-semibold">
                    <%= user.email %>
                  </p>
                </div>
                <div>
                  <p class="text-gray-600">Phone Number</p>
                  <p class="text-lg font-semibold">
                    <%= user.phonenumber || 'Not provided' %>
                  </p>
                </div>
              </div>
              <div class="mt-8 border-t pt-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-4">Password Settings</h2>
                <% if (user.password) { %>
                  <button onclick="togglePasswordChange()" 
                    class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700">
                    <i class="fas fa-key mr-2"></i> Change Password
                  </button>
                <% } %>
              </div>
            </div>

            <!-- Edit Mode -->
            <form id="editMode" onsubmit="handleSubmit(event)" class="hidden space-y-6">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label class="block text-gray-600 mb-2">Full Name</label>
                  <input type="text" name="fullname" value="<%= user.fullname %>"
                    class="w-full p-2 border rounded-lg focus:ring-2 focus:ring-primary-accent">
                </div>
                <div>
                  <label class="block text-gray-600 mb-2">Email Address</label>
                  <input type="email" value="<%= user.email %>"
                    class="w-full p-2 border rounded-lg bg-gray-50" disabled>
                </div>
                <div>
                  <label class="block text-gray-600 mb-2">Phone Number</label>
                  <input type="tel" value="<%= user.phonenumber || '' %>"
                    class="w-full p-2 border rounded-lg bg-gray-50" disabled>
                </div>
              </div>
              <div class="flex justify-end space-x-4">
                <button type="button" onclick="toggleEdit()" class="px-4 py-2 border rounded-lg hover:bg-gray-50">
                  Cancel
                </button>
                <button type="submit"
                  class="bg-primary-accent text-white px-4 py-2 rounded-lg hover:bg-primary-accent/90">
                  Save Changes
                </button>
              </div>
            </form>

            <form id="passwordChangeForm" onsubmit="handlePasswordChange(event)" class="hidden space-y-6 mt-8 border-t pt-6">
              <h2 class="text-xl font-semibold text-gray-800 mb-4">Change Password</h2>
              <div class="grid grid-cols-1 gap-6 max-w-md">
                <div>
                  <label class="block text-gray-600 mb-2">Current Password</label>
                  <input type="password" name="currentPassword" required
                    class="w-full p-2 border rounded-lg focus:ring-2 focus:ring-primary-accent">
                </div>
                <div>
                  <label class="block text-gray-600 mb-2">New Password</label>
                  <input type="password" name="newPassword" required
                    oninput="validatePassword(this)"
                    class="w-full p-2 border rounded-lg focus:ring-2 focus:ring-primary-accent">
                  <p class="text-sm text-gray-500 mt-1">Must be at least 8 characters with 1 letter, 1 number, and 1 special character</p>
                </div>
                <div>
                  <label class="block text-gray-600 mb-2">Confirm New Password</label>
                  <input type="password" name="confirmPassword" required
                    class="w-full p-2 border rounded-lg focus:ring-2 focus:ring-primary-accent">
                </div>
              </div>
              <div class="flex justify-end space-x-4">
                <button type="button" onclick="togglePasswordChange()" 
                  class="px-4 py-2 border rounded-lg hover:bg-gray-50">
                  Cancel
                </button>
                <button type="submit"
                  class="bg-primary-accent text-white px-4 py-2 rounded-lg hover:bg-primary-accent/90">
                  Update Password
                </button>
              </div>
            </form>
          </div>
    </main>
  </div>


  <script>
    async function toggleEdit() {
      const viewMode = document.getElementById('viewMode');
      const editMode = document.getElementById('editMode');
      viewMode.classList.toggle('hidden');
      editMode.classList.toggle('hidden');
    }


    async function handleSubmit(event) {
      event.preventDefault();
      
      //  confirmation before saving changes
      const confirmed = await customConfirm('Are you sure you want to save these changes?');
      if (!confirmed) return;
      
      const fullname = document.querySelector('input[name="fullname"]').value;
      
      try {
        const response = await axios.post('/account/update-profile', {
          fullname: fullname
        });
        
        if (response.data.success) {
          // Update the displayed name in view mode
          document.querySelector('#viewMode .font-semibold').textContent = fullname;
          showToast(response.data.message);
          
          // Switch back to view mode
          toggleEdit();
        }
      } catch (error) {
        console.error('Error updating profile:', error);
        
        const errorMessage = error.response?.data?.message || 'Error updating profile';
        showToast(errorMessage, 'error');
      }
    }

    function togglePasswordChange() {
      const passwordForm = document.getElementById('passwordChangeForm');
      passwordForm.classList.toggle('hidden');
    }

    function validatePassword(input) {
      const password = input.value;
      //  regex for password validation 
      const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&]).{8,}$/;
      
      if (!passwordRegex.test(password)) {
        input.setCustomValidity('Password must be at least 8 characters long and include at least one letter, one number, and one special character');
      } else {
        input.setCustomValidity('');
      }
    }

    async function handlePasswordChange(event) {
      event.preventDefault();
      
      const currentPassword = event.target.currentPassword.value;
      const newPassword = event.target.newPassword.value;
      const confirmPassword = event.target.confirmPassword.value;
      
      const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&]).{8,}$/;
      
      if (!passwordRegex.test(newPassword)) {
        showToast('Password must be at least 8 characters long and include at least one letter, one number, and one special character', 'error');
        return;
      }
      
      if (newPassword !== confirmPassword) {
        showToast('New passwords do not match', 'error');
        return;
      }
      
      //  confirmation before changing password
      const confirmed = await customConfirm('Are you sure you want to change your password?');
      if (!confirmed) return;
      
      try {
        const response = await axios.post('/account/change-password', {
          currentPassword,
          newPassword
        });
        
        if (response.data.success) {
          showToast(response.data.message);
          event.target.reset();
          togglePasswordChange();
        }
      } catch (error) {
        console.error('Error changing password:', error);
        const errorMessage = error.response?.data?.message || 'Error changing password';
        showToast(errorMessage, 'error');
      }
    }
  </script>

  <%- include('../../partials/footer') %>