<%- include('../../partials/header') %>

<div class="flex flex-col md:flex-row">
  <%- include('../../partials/usersidebar') %>

  <main class="flex-grow p-4 md:py-12">
    <nav class="flex mb-6 text-sm">
      <a href="/home" class="text-gray-500 hover:text-primary-accent">Home</a>
      <span class="mx-2 text-gray-500">/</span>
      <span class="text-gray-800">Orders</span>
    </nav>

    <div class="bg-white rounded-lg shadow-lg p-6">
      <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-semibold text-gray-800">My Orders</h1>
        
        <!-- Add Search Form -->
        <form class="flex items-center space-x-2" id="searchForm">
          <input 
            type="search" 
            name="search" 
            placeholder="Search orders..." 
            value="<%= locals.search || '' %>"
            class="px-4 py-2 border rounded-lg focus:ring-2 focus:ring-primary-accent focus:border-transparent"
          >
          <button 
            type="submit"
            class="px-4 py-2 bg-primary-accent text-white rounded-lg hover:bg-primary-accent/90"
          >
            <i class="fas fa-search"></i>
          </button>
        </form>
      </div>

      <% if (orders && orders.length > 0) { %>
        <div class="space-y-6">
          <% orders.forEach(order => { %>
            <a href="/orders/<%= order._id %>" class="block">
              <div class="border rounded-lg p-4 hover:shadow-md transition-shadow">
                <div class="flex justify-between items-center">
                  <div class="flex items-center space-x-4">
                    <!-- Product Images Preview -->
                    <div class="flex -space-x-2">
                      <% if (order.items.length === 1) { %>
                        <img src="<%= order.items[0].images[0].path %>" 
                             alt="<%= order.items[0].name %>" 
                             class="w-12 h-12 rounded-full border-2 border-white object-cover">
                        <div class="w-12 h-12"></div>
                      <% } else { %>
                        <% order.items.slice(0, 2).forEach(item => { %>
                          <img src="<%= item.images[0].path %>" 
                               alt="<%= item.name %>" 
                             class="w-12 h-12 rounded-full border-2 border-white object-cover">
                        <% }) %>
                        <% if (order.items.length > 2) { %>
                          <div class="w-12 h-12 rounded-full border-2 border-white bg-gray-200 flex items-center justify-center text-sm font-medium">
                            +<%= order.items.length - 2 %>
                          </div>
                        <% } %>
                      <% } %>
                    </div>
                    <div>
                      <p class="font-medium">Order #<%= order.orderId %></p>
                      <!-- Add Items List -->
                      <div class="text-sm text-gray-600 mt-1">
                        <% order.items.forEach((item, index) => { %>
                          <%= item.name %><%= index < order.items.length - 1 ? ',' : '' %>
                        <% }) %>
                      </div>
                      <% 
                        let statusDisplay = '';
                        let displayDate = null;
                        let statusColor = '';
                        
                        // Determine final status and date for the order
                        if (order.items.every(item => item.status === 'cancelled')) {
                          statusDisplay = 'Cancelled';
                          displayDate = order.items[0].cancelledDate;
                          statusColor = 'text-red-600';
                        } else if (order.items.every(item => item.status === 'returned')) {
                          statusDisplay = 'Returned';
                          displayDate = order.items[0].returnedDate;
                          statusColor = 'text-blue-600';
                        } else if (order.items.every(item => item.status === 'delivered')) {
                          statusDisplay = 'Delivered';
                          displayDate = order.items[0].deliveredDate;
                          statusColor = 'text-green-600';
                        } else if (order.items.every(item => item.status === 'shipped')) {
                          statusDisplay = 'Shipped';
                          displayDate = order.items[0].shippedDate;
                          statusColor = 'text-orange-600';
                        } else {
                          statusDisplay = 'Ordered';
                          displayDate = order.orderDate;
                          statusColor = 'text-gray-600';
                        }
                      %>
                      <p class="text-sm <%= statusColor %> mt-2">
                        <%= statusDisplay %> on: <%= new Date(displayDate).toLocaleDateString() %>
                      </p>
                    </div>
                  </div>
                  <div class="text-right">
                    <p class="font-semibold">â‚¹<%= order.totalAmount %></p>
                    <span class="inline-block px-3 py-1 text-sm rounded-full 
                      <%= order.paymentStatus === 'paid' ? 'bg-green-100 text-green-800' : 
                          order.paymentStatus === 'pending' ? 'bg-red-100 text-red-800' :
                          order.paymentStatus === 'refunded' ? 'bg-blue-100 text-blue-800' :
                          'bg-yellow-100 text-yellow-800' %>">
                      <%= order.paymentStatus === 'pending' ? 'Payment Failed' : order.paymentStatus %>
                    </span>
                  </div>
                </div>
              </div>
            </a>
          <% }) %>
        </div>

        <!-- Add Pagination Controls -->
        <% if (totalPages > 1) { %>
          <div class="mt-8 flex justify-center items-center space-x-4">
            <% if (hasPrevPage) { %>
              <a href="/orders?page=<%= currentPage - 1 %><%= search ? `&search=${search}` : '' %>"
                class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200">
                Previous
              </a>
            <% } %>

            <% for(let i = 1; i <= totalPages; i++) { %>
              <a href="/orders?page=<%= i %><%= search ? `&search=${search}` : '' %>"
                class="px-4 py-2 rounded-lg <%= currentPage === i ? 'bg-primary-accent text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200' %>">
                <%= i %>
              </a>
            <% } %>

            <% if (hasNextPage) { %>
              <a href="/orders?page=<%= currentPage + 1 %><%= search ? `&search=${search}` : '' %>"
                class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200">
                Next
              </a>
            <% } %>
          </div>
        <% } %>
      <% } else { %>
        <!-- Empty Orders -->
        <div class="text-center py-8">
          <i class="fas fa-shopping-bag text-gray-400 text-4xl mb-4"></i>
          <p class="text-gray-600">You haven't placed any orders yet</p>
          <a href="/home" 
             class="inline-block mt-4 bg-primary-accent text-white px-6 py-2 rounded-lg hover:bg-primary-accent/90">
            Start Shopping
          </a>
        </div>
      <% } %>
    </div>
  </main>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js" defer></script>
<script>
  async function retryPayment(orderId) {
    try {
      const response = await axios.post(`/orders/${orderId}/retry-payment`);

      if (response.data.success) {
        const options = {
          key: '<%= process.env.RAZORPAY_KEY_ID %>',
          amount: response.data.amount,
          currency: "INR",
          name: "TechHive",
          description: "Order Payment",
          order_id: response.data.razorpayOrderId,
          handler: function (response) {
            verifyPayment({
              razorpay_payment_id: response.razorpay_payment_id,
              razorpay_order_id: response.razorpay_order_id,
              razorpay_signature: response.razorpay_signature,
              orderId: orderId
            });
          },
          modal: {
            ondismiss: function () {
              showToast('Payment failed', 'error');
            }
          },
          prefill: {
            name: "<%= user.name %>",
            email: "<%= user.email %>"
          },
          theme: {
            color: "#DA0037"
          }
        };

        const rzp = new Razorpay(options);
        rzp.open();
      } else {
        showToast(response.data.message || 'Failed to initialize payment', 'error');
      }
    } catch (error) {
      console.error('Error:', error);
      showToast('Failed to initialize payment', 'error');
    }
  }

  async function verifyPayment(paymentData) {
    try {
      const response = await axios.post('/checkout/verifypayment', paymentData);
      if (response.data.success) {
        showToast('Payment successful', 'success');
        setTimeout(() => window.location.reload(), 1500);
      } else {
        showToast('Payment verification failed', 'error');
      }
    } catch (error) {
      console.error('Error:', error);
      showToast('Payment verification failed', 'error');
    }
  }

  document.getElementById('searchForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const searchQuery = new URLSearchParams(new FormData(e.target)).toString();
    window.location.href = `/orders?${searchQuery}`;
  });
</script>

<%- include('../../partials/footer') %>