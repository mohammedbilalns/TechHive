<%- include('../partials/header') %>
<main class="py-12 flex flex-1 justify-center items-center">
  <div class="bg-primary-white rounded-lg shadow-lg max-w-md w-full p-6">
    <!-- Form Section -->
    <div class="bg-gray-50 flex flex-col items-center text-center">
      <p class="text-2xl font-semibold text-gray-800 mb-4">OTP Verification</p>
      <p class="text-gray-600 mb-2">Enter the 4-digit verification code sent to your email</p>
      <div id="timer" class="text-sm text-gray-600 mb-6">
        Time remaining: <span id="timeLeft">01:00</span>
      </div>
      <form id="otpForm" action="/verify-otp" method="POST">
        <div class="flex gap-2 mb-6">
          <input type="text" maxlength="1" class="otp-input w-12 h-12 border text-center text-xl rounded-md" name="otp1" />
          <input type="text" maxlength="1" class="otp-input w-12 h-12 border text-center text-xl rounded-md" name="otp2" />
          <input type="text" maxlength="1" class="otp-input w-12 h-12 border text-center text-xl rounded-md" name="otp3" />
          <input type="text" maxlength="1" class="otp-input w-12 h-12 border text-center text-xl rounded-md" name="otp4" />
        </div>
        <% if (locals.message && locals.alertType) { %>
          <div id="alertMessage" 
               class="mb-4 p-3 rounded-md 
               <%= alertType === 'error' ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700' %>">
            <%= message %>
          </div>
        <% } %>
        <button type="submit" class="w-full py-2 mb-4 text-white bg-primary-accent rounded-md">Verify Code</button>
      </form>
      <div class="text-center">
        <span class="text-gray-600">Didn't receive code?</span>
        <button id="resendButton" class="text-primary-accent ml-2" disabled>
          Resend (<span id="resendTime">60</span>s)
        </button>
      </div>
    </div>
  </div>
</main>
<%- include('../partials/footer') %>

<script>
  const otpInputs = document.querySelectorAll('.otp-input');
  const otpForm = document.getElementById('otpForm');
  const resendButton = document.getElementById('resendButton');
  const resendTimeSpan = document.getElementById('resendTime');
  const timeLeftSpan = document.getElementById('timeLeft');

  let timeLeft = parseInt(localStorage.getItem('otpTimer')) || 60;

  const updateTimer = () => {
    if (timeLeft > 0) {
      timeLeft--;
      const minutes = String(Math.floor(timeLeft / 60)).padStart(2, '0');
      const seconds = String(timeLeft % 60).padStart(2, '0');
      timeLeftSpan.textContent = `${minutes}:${seconds}`;
      resendTimeSpan.textContent = timeLeft;
      localStorage.setItem('otpTimer', timeLeft);
    } else {
      clearInterval(timerInterval);
      resendButton.disabled = false;
      localStorage.removeItem('otpTimer');
    }
  };

  let timerInterval = setInterval(updateTimer, 1000);

  const initialMinutes = String(Math.floor(timeLeft / 60)).padStart(2, '0');
  const initialSeconds = String(timeLeft % 60).padStart(2, '0');
  timeLeftSpan.textContent = `${initialMinutes}:${initialSeconds}`;
  resendTimeSpan.textContent = timeLeft;

  // OTP Input Navigation
  otpInputs.forEach((input, index) => {
    input.addEventListener('input', (event) => {
      const current = event.target;
      const next = otpInputs[index + 1];
      const prev = otpInputs[index - 1];

      current.value = current.value.replace(/[^0-9]/g, '');

      if (current.value.length === 1 && next) {
        next.focus();
      }

      if (index === otpInputs.length - 1 && current.value.length === 1) {
        const allFilled = Array.from(otpInputs).every(input => input.value.length === 1);
        if (allFilled) {
          otpForm.submit();
        }
      }
    });

    input.addEventListener('keydown', (e) => {
      const current = e.target;
      const prev = otpInputs[index - 1];

      if (e.key === 'Backspace') {
        if (current.value === '' && prev) {
          e.preventDefault();
          prev.value = '';
          prev.focus();
        } else {
          current.value = '';
        }
      }
    });
  });

  // Resend Button Handler
  resendButton.addEventListener('click', async () => {
    if (!resendButton.disabled) {
      try {
        const response = await fetch('/resend-otp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
        });

        if (response.ok) {
          timeLeft = 60;
          localStorage.setItem('otpTimer', timeLeft);
          resendButton.disabled = true;

          clearInterval(timerInterval);
          timerInterval = setInterval(updateTimer, 1000);
        } else {
          alert('Failed to resend OTP. Please try again.');
        }
      } catch (error) {
        console.error('Error resending OTP:', error);
        alert('Failed to resend OTP. Please try again.');
      }
    }
  });

  window.addEventListener('beforeunload', () => {
    clearInterval(timerInterval);
  });
</script>
