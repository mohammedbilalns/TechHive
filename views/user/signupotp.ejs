<%- include('../partials/authheader') %>
<main class="py-12 flex flex-1 justify-center items-center">
  <div class="bg-primary-white rounded-lg shadow-lg max-w-md w-full p-6">
    <!-- Form Section -->
    <div class="bg-gray-50 flex flex-col items-center text-center">
      <p class="text-2xl font-semibold text-gray-800 mb-4">OTP Verification</p>
      <p class="text-gray-600 mb-2">Enter the 4-digit verification code sent to your email</p>
      <form id="otpForm" action="/verify-otp" method="POST">
        <!-- Hidden input to pass the email -->
        <input type="hidden" name="email" value="<%= locals.email %>" />
        <!-- Add a hidden input for remaining time -->
        <input type="hidden" name="timeRem" id="timeRemaining" 
               value="<%= locals.timeRemaining || 60 %>" />

        <div class="flex gap-2 mb-6">
          <input type="text" maxlength="1" class="otp-input w-12 h-12 border text-center text-xl rounded-md" name="otp1" />
          <input type="text" maxlength="1" class="otp-input w-12 h-12 border text-center text-xl rounded-md" name="otp2" />
          <input type="text" maxlength="1" class="otp-input w-12 h-12 border text-center text-xl rounded-md" name="otp3" />
          <input type="text" maxlength="1" class="otp-input w-12 h-12 border text-center text-xl rounded-md" name="otp4" />
        </div>
        <% if (locals.message && locals.alertType) { %>
          <div id="alertMessage" 
               class="mb-4 p-3 rounded-md 
               <%= alertType === 'error' ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700' %>">
            <%= message %>
          </div>
        <% } %>
        <div id="warningMessage" class="mb-4 p-3 rounded-md bg-red-100 text-red-700" style="display: none;">
          OTP expired
        </div>
        <button type="submit" class="w-full py-2 mb-4 text-white bg-primary-accent rounded-md">Verify Code</button>
      </form>

      <form action="/resend-otp" method="post">
      <div class="text-center">
        <span class="text-gray-600">Didn't receive code?</span>
        <input type="hidden" name="email" value="<%= locals.email %>" />
        <button id="resendButton" type="submit"  class="text-primary-accent ml-2" disabled>
          Resend OTP
        </button>
        <p id="timer" class="mt-2 text-gray-600">You can resend OTP in: 1:00</p>
      </div>
    </form>
    </div>
  </div>
</main>
<%- include('../partials/authfooter') %>

<script>
const otpInputs = document.querySelectorAll('.otp-input');
const otpForm = document.getElementById('otpForm');
const resendButton = document.getElementById('resendButton');
const timerDisplay = document.getElementById('timer');
const warningMessage = document.getElementById('warningMessage'); // Add an element for the warning message

let countdownTimer;
//let timeLeft = 60; // 1 minute timer

// OTP Input Navigation
otpInputs.forEach((input, index) => {
  input.addEventListener('input', (event) => {
    const current = event.target;
    const next = otpInputs[index + 1];
    const prev = otpInputs[index - 1];

    current.value = current.value.replace(/[^0-9]/g, '');

    if (current.value.length === 1 && next) {
      next.focus();
    }

    if (index === otpInputs.length - 1 && current.value.length === 1) {
      const allFilled = Array.from(otpInputs).every(input => input.value.length === 1);
      if (allFilled) {
        otpForm.submit();
      }
    }
  });

  input.addEventListener('keydown', (e) => {
    const current = e.target;
    const prev = otpInputs[index - 1];

    if (e.key === 'Backspace') {
      if (current.value === '' && prev) {
        e.preventDefault();
        prev.value = '';
        prev.focus();
      } else {
        current.value = '';
      }
    }
  });
});

// Update the button style based on the timer state
resendButton.style.cursor = 'not-allowed'; // Initially set cursor style

// Update to use the persisted time value
const initialTime = document.getElementById('timeRemaining').value;
let timeLeft = parseInt(initialTime);

// If time is already expired, show the expired state immediately
if (timeLeft <= 0) {
    resendButton.disabled = false;
    resendButton.style.cursor = 'pointer';
    otpInputs.forEach(input => {
        input.disabled = true;
    });
    warningMessage.style.display = 'block';
    timerDisplay.style.display = 'none';
} else {
    // Update timer display immediately before starting the countdown
    let minutes = Math.floor(timeLeft / 60);
    let seconds = timeLeft % 60;
    timerDisplay.textContent = `You can resend OTP in: ${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
    startTimer();
}

// Remove the automatic timer start on window.load
// window.onload = startTimer;

// Update the timer function to sync with hidden input
function startTimer() {
  resendButton.disabled = true;
  resendButton.style.cursor = 'not-allowed';
  
  countdownTimer = setInterval(function () {
    timeLeft--;
    let minutes = Math.floor(timeLeft / 60);
    let seconds = timeLeft % 60;
    timerDisplay.textContent = `You can resend OTP in: ${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
    
    // Update hidden input with current remaining time
    document.getElementById('timeRemaining').value = timeLeft;

    if (timeLeft <= 0) {
      clearInterval(countdownTimer); // Stop the timer when it reaches 0
      resendButton.disabled = false; // Enable the resend button
      resendButton.style.cursor = 'pointer'; // Change cursor style when enabled

      // Disable all OTP input fields
      otpInputs.forEach(input => {
        input.disabled = true;
      });

      // Show the warning message
      warningMessage.style.display = 'block';

      // Hide the timer message
      timerDisplay.style.display = 'none';
    }
  }, 1000); // Update every second
}

// Attach the resend function to the "Resend OTP" button
resendButton.addEventListener('click', resendOTP);



</script>
